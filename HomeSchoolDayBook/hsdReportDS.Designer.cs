//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace HomeSchoolDayBook {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("hsdReportDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class hsdReportDS : global::System.Data.DataSet {
        
        private DT22VariousDataTable tableDT22Various;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public hsdReportDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected hsdReportDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DT22Various"] != null)) {
                    base.Tables.Add(new DT22VariousDataTable(ds.Tables["DT22Various"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DT22VariousDataTable DT22Various {
            get {
                return this.tableDT22Various;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            hsdReportDS cln = ((hsdReportDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DT22Various"] != null)) {
                    base.Tables.Add(new DT22VariousDataTable(ds.Tables["DT22Various"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDT22Various = ((DT22VariousDataTable)(base.Tables["DT22Various"]));
            if ((initTable == true)) {
                if ((this.tableDT22Various != null)) {
                    this.tableDT22Various.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "hsdReportDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/hsdReportDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDT22Various = new DT22VariousDataTable();
            base.Tables.Add(this.tableDT22Various);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDT22Various() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            hsdReportDS ds = new hsdReportDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DT22VariousRowChangeEventHandler(object sender, DT22VariousRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DT22VariousDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnString1;
            
            private global::System.Data.DataColumn columnString2;
            
            private global::System.Data.DataColumn columnString3;
            
            private global::System.Data.DataColumn columnString4;
            
            private global::System.Data.DataColumn columnString5;
            
            private global::System.Data.DataColumn columnString6;
            
            private global::System.Data.DataColumn columnString7;
            
            private global::System.Data.DataColumn columnString8;
            
            private global::System.Data.DataColumn columnString9;
            
            private global::System.Data.DataColumn columnString10;
            
            private global::System.Data.DataColumn columnDateTime1;
            
            private global::System.Data.DataColumn columnDateTime2;
            
            private global::System.Data.DataColumn columnDateTime3;
            
            private global::System.Data.DataColumn columnDateTime4;
            
            private global::System.Data.DataColumn columnInt1;
            
            private global::System.Data.DataColumn columnInt2;
            
            private global::System.Data.DataColumn columnInt3;
            
            private global::System.Data.DataColumn columnInt4;
            
            private global::System.Data.DataColumn columnDecimal1;
            
            private global::System.Data.DataColumn columnDecimal2;
            
            private global::System.Data.DataColumn columnDecimal3;
            
            private global::System.Data.DataColumn columnDecimal4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DT22VariousDataTable() {
                this.TableName = "DT22Various";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DT22VariousDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DT22VariousDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String1Column {
                get {
                    return this.columnString1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String2Column {
                get {
                    return this.columnString2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String3Column {
                get {
                    return this.columnString3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String4Column {
                get {
                    return this.columnString4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String5Column {
                get {
                    return this.columnString5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String6Column {
                get {
                    return this.columnString6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String7Column {
                get {
                    return this.columnString7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String8Column {
                get {
                    return this.columnString8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String9Column {
                get {
                    return this.columnString9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn String10Column {
                get {
                    return this.columnString10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime1Column {
                get {
                    return this.columnDateTime1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime2Column {
                get {
                    return this.columnDateTime2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime3Column {
                get {
                    return this.columnDateTime3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateTime4Column {
                get {
                    return this.columnDateTime4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Int1Column {
                get {
                    return this.columnInt1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Int2Column {
                get {
                    return this.columnInt2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Int3Column {
                get {
                    return this.columnInt3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Int4Column {
                get {
                    return this.columnInt4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Decimal1Column {
                get {
                    return this.columnDecimal1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Decimal2Column {
                get {
                    return this.columnDecimal2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Decimal3Column {
                get {
                    return this.columnDecimal3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Decimal4Column {
                get {
                    return this.columnDecimal4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DT22VariousRow this[int index] {
                get {
                    return ((DT22VariousRow)(this.Rows[index]));
                }
            }
            
            public event DT22VariousRowChangeEventHandler DT22VariousRowChanging;
            
            public event DT22VariousRowChangeEventHandler DT22VariousRowChanged;
            
            public event DT22VariousRowChangeEventHandler DT22VariousRowDeleting;
            
            public event DT22VariousRowChangeEventHandler DT22VariousRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDT22VariousRow(DT22VariousRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DT22VariousRow AddDT22VariousRow(
                        string String1, 
                        string String2, 
                        string String3, 
                        string String4, 
                        string String5, 
                        string String6, 
                        string String7, 
                        string String8, 
                        string String9, 
                        string String10, 
                        System.DateTime DateTime1, 
                        System.DateTime DateTime2, 
                        System.DateTime DateTime3, 
                        System.DateTime DateTime4, 
                        int Int1, 
                        int Int2, 
                        int Int3, 
                        int Int4, 
                        decimal Decimal1, 
                        decimal Decimal2, 
                        decimal Decimal3, 
                        decimal Decimal4) {
                DT22VariousRow rowDT22VariousRow = ((DT22VariousRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        String1,
                        String2,
                        String3,
                        String4,
                        String5,
                        String6,
                        String7,
                        String8,
                        String9,
                        String10,
                        DateTime1,
                        DateTime2,
                        DateTime3,
                        DateTime4,
                        Int1,
                        Int2,
                        Int3,
                        Int4,
                        Decimal1,
                        Decimal2,
                        Decimal3,
                        Decimal4};
                rowDT22VariousRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDT22VariousRow);
                return rowDT22VariousRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DT22VariousDataTable cln = ((DT22VariousDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DT22VariousDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnString1 = base.Columns["String1"];
                this.columnString2 = base.Columns["String2"];
                this.columnString3 = base.Columns["String3"];
                this.columnString4 = base.Columns["String4"];
                this.columnString5 = base.Columns["String5"];
                this.columnString6 = base.Columns["String6"];
                this.columnString7 = base.Columns["String7"];
                this.columnString8 = base.Columns["String8"];
                this.columnString9 = base.Columns["String9"];
                this.columnString10 = base.Columns["String10"];
                this.columnDateTime1 = base.Columns["DateTime1"];
                this.columnDateTime2 = base.Columns["DateTime2"];
                this.columnDateTime3 = base.Columns["DateTime3"];
                this.columnDateTime4 = base.Columns["DateTime4"];
                this.columnInt1 = base.Columns["Int1"];
                this.columnInt2 = base.Columns["Int2"];
                this.columnInt3 = base.Columns["Int3"];
                this.columnInt4 = base.Columns["Int4"];
                this.columnDecimal1 = base.Columns["Decimal1"];
                this.columnDecimal2 = base.Columns["Decimal2"];
                this.columnDecimal3 = base.Columns["Decimal3"];
                this.columnDecimal4 = base.Columns["Decimal4"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnString1 = new global::System.Data.DataColumn("String1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString1);
                this.columnString2 = new global::System.Data.DataColumn("String2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString2);
                this.columnString3 = new global::System.Data.DataColumn("String3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString3);
                this.columnString4 = new global::System.Data.DataColumn("String4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString4);
                this.columnString5 = new global::System.Data.DataColumn("String5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString5);
                this.columnString6 = new global::System.Data.DataColumn("String6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString6);
                this.columnString7 = new global::System.Data.DataColumn("String7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString7);
                this.columnString8 = new global::System.Data.DataColumn("String8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString8);
                this.columnString9 = new global::System.Data.DataColumn("String9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString9);
                this.columnString10 = new global::System.Data.DataColumn("String10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnString10);
                this.columnDateTime1 = new global::System.Data.DataColumn("DateTime1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime1);
                this.columnDateTime2 = new global::System.Data.DataColumn("DateTime2", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime2);
                this.columnDateTime3 = new global::System.Data.DataColumn("DateTime3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime3);
                this.columnDateTime4 = new global::System.Data.DataColumn("DateTime4", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTime4);
                this.columnInt1 = new global::System.Data.DataColumn("Int1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt1);
                this.columnInt2 = new global::System.Data.DataColumn("Int2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt2);
                this.columnInt3 = new global::System.Data.DataColumn("Int3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt3);
                this.columnInt4 = new global::System.Data.DataColumn("Int4", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt4);
                this.columnDecimal1 = new global::System.Data.DataColumn("Decimal1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecimal1);
                this.columnDecimal2 = new global::System.Data.DataColumn("Decimal2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecimal2);
                this.columnDecimal3 = new global::System.Data.DataColumn("Decimal3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecimal3);
                this.columnDecimal4 = new global::System.Data.DataColumn("Decimal4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDecimal4);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DT22VariousRow NewDT22VariousRow() {
                return ((DT22VariousRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DT22VariousRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DT22VariousRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DT22VariousRowChanged != null)) {
                    this.DT22VariousRowChanged(this, new DT22VariousRowChangeEvent(((DT22VariousRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DT22VariousRowChanging != null)) {
                    this.DT22VariousRowChanging(this, new DT22VariousRowChangeEvent(((DT22VariousRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DT22VariousRowDeleted != null)) {
                    this.DT22VariousRowDeleted(this, new DT22VariousRowChangeEvent(((DT22VariousRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DT22VariousRowDeleting != null)) {
                    this.DT22VariousRowDeleting(this, new DT22VariousRowChangeEvent(((DT22VariousRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDT22VariousRow(DT22VariousRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                hsdReportDS ds = new hsdReportDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DT22VariousDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DT22VariousRow : global::System.Data.DataRow {
            
            private DT22VariousDataTable tableDT22Various;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DT22VariousRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDT22Various = ((DT22VariousDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String1 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String1\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String2 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String2\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String3 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String3\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String4 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String4\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String5 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String5\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String6 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String6\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String7 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String7\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String8 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String8\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String9 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String9\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string String10 {
                get {
                    try {
                        return ((string)(this[this.tableDT22Various.String10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'String10\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.String10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDT22Various.DateTime1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime1\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.DateTime1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime2 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDT22Various.DateTime2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime2\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.DateTime2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDT22Various.DateTime3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime3\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.DateTime3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateTime4 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDT22Various.DateTime4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTime4\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.DateTime4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Int1 {
                get {
                    try {
                        return ((int)(this[this.tableDT22Various.Int1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Int1\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.Int1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Int2 {
                get {
                    try {
                        return ((int)(this[this.tableDT22Various.Int2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Int2\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.Int2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Int3 {
                get {
                    try {
                        return ((int)(this[this.tableDT22Various.Int3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Int3\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.Int3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Int4 {
                get {
                    try {
                        return ((int)(this[this.tableDT22Various.Int4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Int4\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.Int4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Decimal1 {
                get {
                    try {
                        return ((decimal)(this[this.tableDT22Various.Decimal1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Decimal1\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.Decimal1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Decimal2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDT22Various.Decimal2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Decimal2\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.Decimal2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Decimal3 {
                get {
                    try {
                        return ((decimal)(this[this.tableDT22Various.Decimal3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Decimal3\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.Decimal3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Decimal4 {
                get {
                    try {
                        return ((decimal)(this[this.tableDT22Various.Decimal4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Decimal4\' in table \'DT22Various\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDT22Various.Decimal4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString1Null() {
                return this.IsNull(this.tableDT22Various.String1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString1Null() {
                this[this.tableDT22Various.String1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString2Null() {
                return this.IsNull(this.tableDT22Various.String2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString2Null() {
                this[this.tableDT22Various.String2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString3Null() {
                return this.IsNull(this.tableDT22Various.String3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString3Null() {
                this[this.tableDT22Various.String3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString4Null() {
                return this.IsNull(this.tableDT22Various.String4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString4Null() {
                this[this.tableDT22Various.String4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString5Null() {
                return this.IsNull(this.tableDT22Various.String5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString5Null() {
                this[this.tableDT22Various.String5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString6Null() {
                return this.IsNull(this.tableDT22Various.String6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString6Null() {
                this[this.tableDT22Various.String6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString7Null() {
                return this.IsNull(this.tableDT22Various.String7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString7Null() {
                this[this.tableDT22Various.String7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString8Null() {
                return this.IsNull(this.tableDT22Various.String8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString8Null() {
                this[this.tableDT22Various.String8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString9Null() {
                return this.IsNull(this.tableDT22Various.String9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString9Null() {
                this[this.tableDT22Various.String9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsString10Null() {
                return this.IsNull(this.tableDT22Various.String10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetString10Null() {
                this[this.tableDT22Various.String10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTime1Null() {
                return this.IsNull(this.tableDT22Various.DateTime1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTime1Null() {
                this[this.tableDT22Various.DateTime1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTime2Null() {
                return this.IsNull(this.tableDT22Various.DateTime2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTime2Null() {
                this[this.tableDT22Various.DateTime2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTime3Null() {
                return this.IsNull(this.tableDT22Various.DateTime3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTime3Null() {
                this[this.tableDT22Various.DateTime3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateTime4Null() {
                return this.IsNull(this.tableDT22Various.DateTime4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateTime4Null() {
                this[this.tableDT22Various.DateTime4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInt1Null() {
                return this.IsNull(this.tableDT22Various.Int1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInt1Null() {
                this[this.tableDT22Various.Int1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInt2Null() {
                return this.IsNull(this.tableDT22Various.Int2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInt2Null() {
                this[this.tableDT22Various.Int2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInt3Null() {
                return this.IsNull(this.tableDT22Various.Int3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInt3Null() {
                this[this.tableDT22Various.Int3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInt4Null() {
                return this.IsNull(this.tableDT22Various.Int4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInt4Null() {
                this[this.tableDT22Various.Int4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDecimal1Null() {
                return this.IsNull(this.tableDT22Various.Decimal1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDecimal1Null() {
                this[this.tableDT22Various.Decimal1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDecimal2Null() {
                return this.IsNull(this.tableDT22Various.Decimal2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDecimal2Null() {
                this[this.tableDT22Various.Decimal2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDecimal3Null() {
                return this.IsNull(this.tableDT22Various.Decimal3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDecimal3Null() {
                this[this.tableDT22Various.Decimal3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDecimal4Null() {
                return this.IsNull(this.tableDT22Various.Decimal4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDecimal4Null() {
                this[this.tableDT22Various.Decimal4Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DT22VariousRowChangeEvent : global::System.EventArgs {
            
            private DT22VariousRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DT22VariousRowChangeEvent(DT22VariousRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DT22VariousRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591